pwd
ls
help
mean ((rnorm, 1000, 10, 3))
mean (rnorm(1000,10,3))
? rnorm
rnorm(1000, 10, 3)
?sd
mean (rnorm(1000,10,3))
var (rnorm, 1000,10,3)
var (rnorm (1000,10,3))
mean (rnorm(1000,10,3))
var (rnorm (1000,10,3))
var (rnorm (1000,10,3))
var (rnorm (1000,10,3))
mean (rnorm(1000,10,3))
var (rnorm (1000,10,3))
mean (rnorm(1000,10,3))
var (rnorm (1000,10,3))
source('~/firstrprog.R')
# comment
getwd()
source("firstprog.R")
list.files()
list.files()
hist(rnorm(100))
source('~/firstrprog.R')
hist(rnorm(100))
?pdf
source('~/firstrprog.R')
pdf ("Rpdf")
hist(rnorm(100))
source('~/firstrprog.R')
?dev.off
file.exists("MyRpdf.pdf")
file.exists("MyRpd.pdf")
ls()
search()
x <- c(1,2,4)
q <- c(x,x,8); q
x
print(x)
j <- q
q[4]
q[6]
j[2:4]
mean (x)
mean(q)
z <- mean(x)
z
data()
Nile
hist(nile)
hist(Nile)
JohnsinJohnson
JohnsonJohnson
hist(JohnsonJohnson)
AirPassengers
hist(AirPassengers)
UCBAdmissions
hist (UCBAdmisiions)
hist (UCBAdmissions)
state.name(CA)
state.name (calfornia )
? state.name
state.name
state.name [2]
satte.name (2)
state.name (2)
state.name ("Vermont")
state.x77
state.x77 [1]
state.x77 [1:3]
state.x77 [68]
state.region
women
hist (women)
hist (women[2])
data (package =.women (all.available = TRUE))
data (women)
sleep
state.name ("California")
state.name[5]
data()
Orabge
Orange
hist(Orange)
Nile
hist (Nile, 15)
oddcount()
function(oddcount)
3
oddcount (c(1,3,5))
function oddcount (c(1,3,5))
function () oddcount (c(1,3,5)))
function (oddcount (c(1,3,5)))
38 %% 12
f <- function (k) return (k+l)
l <-
3
f(5)
l <- 67
f(5)
h <- function (u, m=2, n=TRUE)
{}
h (9)
h(9, m,n)
m
h(10)
data(0)
data(m)
m
a <- available.packages()
head (rownames (a), 10)
library ggplot2
library (ggplot2)
search()
install.packages("ggplot2")
library(ggplot2)
seach()
search()
install.packages("devtools")
library(devtools)
search()
install.packages("KernSmooth")
library()
KernSmooth
library(KernSmooth)
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
6+8
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3.14)
z <- c(1.1, 9, 3.14)
?c
z
z
c(z,555,z)
z * Z + 100
z*z+100
z*2+100
my_sqrt <- sqrt(z-1)
mysqrt
my_sqrt
my_div <- (z/mysqrt)
my_div <- (z/my_sqrt)
my_div <= z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my
my_div
swirl()
swirl()
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- cwd()
old.dir <- getwd()
?dir.create
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1, folder2)
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2"); setwd("testdir2"); dir.create("testdir3"); file.path()
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2', recursive = TRUE)
getwd()
setwd(old.dir)
unlink ('testdir')
unlink("testdir", recursive - TRUE)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5 )
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect(0.5,55,-10,6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Ravi")
my_name <- c(my_char, "Ravi")
my_name
paste(my_name, collapse = " ")
paste ("Hello", "world", sep = " ")
paste ("Hello", "world!", sep = " ")
my_intV <- c(1:3)
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
LETTERS <- c(A:Z)
paste(LETTERS, 1:4, sep = "-")
factor
lm()
?lm
b <- factor(c("yes", "no", "no", "yes"))
b
b <- factor(c("yes", "no", "no", "yes", "idontknow"))
b
table(b)
unclass(b)
b <- factor(c("yes", "no", "no", "yes", "idontknow"), levels = c("yes", "no", "idontknow"))
b
unclass(b)
q <- c(1, 2, NA, 3, 4)
is.na(q)
df
dfmvar <- data.frame (boovar=1:4, barvar = c(T, T, F, F))
dfmvar
nrow(dfmvar); ncol(dfmvar)
kids <- 1:3
name(kids)
names(kids)
names(kids)  <- c("Hari", "Divya", "Shyam")
names(kids)
kids
lfn <- list( a=1, b=2, c=4)
lfn
lfn <- list( Hari=1, Divya=2, Shyam=3)
lfn
mx <- matrix (1:4, nrow=2, ncol=2)
mx
dimnames(mx) <- list(c("Hari", "Divya", "Shyam", "Radhikha"))
dimnames(mx) <- list(c("Hari", "Divya"), c("Shyam", "Radhikha"))
mx
mytabdata <- read.table("myRpdf.pdf")
mytabdata <- read.table("myRpdf.pdf", pdf)
mytabdata <- read.table("README.md)
q
mytabdata <- read.table("README.md")
mytabdata
sd(c(5,8,12))
which.min(c(4,1,6))
?read.table
z <- data.frame(Ravi=1, Radhikha="Wife")
dput(z)
dput(z, file = "z.R")
new.z <- dget("z.R")
new.z
w <- "boo"
z <- data.frame(Ravi=1, Radhikha="Wife")
sum(c("w", "z"), file = "dumpdata.R")
dump(c("w", "z"), file = "dumpdata.R")
rm(w,z)
source("dumpdata.R")
w
z
rl <- readLines("dumpdata.R")
rl
install.packages("devtools")
library(devtools)
getwd
getwd()
ls
ls()
ls -la
cd Desktop
q
exit
0
?exit
exit()
quit
q()
set.seed(1)
rpois(5,2)
?rposi
?rpois()
getwd()
library(xlsx)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx" download.file(url=fileUrl1, destfile="gov_NGAP.xlsx", mode="w", method="curl") dateDownloaded <- date()print(dateDownloaded)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url=fileUrl1, destfile="gov_NGAP.xlsx", mode="w", method="curl")
dateDownloaded <- date(); print(dateDownloaded)
dateDownloaded <- date(); print(dateDownloaded)
rowIndex <- 18:23
colIndx <- 7:15
dat <- read.xlsx(file="gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
fileUrl2 <- "http://d396qusza40orc.cloudfront.net/getdata/data/restaurants.xml"
my_doc <- xmlTreeParse(file=fileUrl2,useInternal=TRUE)
install.packages ("xml")
install.packages ("XML")
my_doc <- xmlTreeParse(file=fileUrl2,useInternal=TRUE)
library(XML)
my_doc <- xmlTreeParse(file=fileUrl2,useInternal=TRUE)
myrootNode <- xmlRoot(doc)
myrootNode <- xmlRoot(my_doc)
xmlName(myrootNode)
myrootNode[[1]][[1]]
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
zipcode <- xpathSApply(myrootNode,"//zipcode",xmlValue)
myzipcode <- xpathSApply(myrootNode,"//zipcode",xmlValue)
length(myzipcode[myzipcode == 21231])
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url=fileUrl1, destfile="fsspid.csv", mode="w", method="curl")
dateDownloaded <- date()
print(dateDownloaded)
library(data.table)
install.packages("data.table")
install.packages("data.table")
library(data.table)
library(data.table)
library(data.table)
myfreadDT <- fread(input="fsspid.csv", sep=",")
system.time(myfreadDT[,mean(pwgtp15),by=SEX])
DT <- myfreadDT
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
R.version.string
library(swirl)
install_from_swirl("Geting and Cleaning Data")
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <-  read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
print(cran)
cran
select (cran, -time)
-5:20
-[5:20]
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter( cran, size > 100500, r_os == "linux-gnu" )
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter (cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange (cran2, country, desc(r_version), ip_id)
cran3 <- select( cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot (x,y)
plot(mar = c(2,2,2,2))
par (mar = c(2,2,2,2))
plot(x,y)
par (mar = c(4,4,2,2))
plot(x,y)
plot(x,y, pch = 20)
plot(x,y, pch = 2)
plot(x,y, pch = 3)
plot(x,y, pch = 19)
title("My Scatterplot")
legend("hashhaha")
fir <- lm (y -x )
fir <- lm (y ~x )
dbline(fir)
abline(fir)
abline(fir, color = red)
abline(fir, col = "red")
plot (x, y, xlab = "Height", ylab = "Weight")
legend ("topleft", legend = "MY Points" )
?Devices
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(fileUrl, destfile = "tempdata.zip", method = "curl")
unzip("./tempdata.zip")
data <- readRDS("summarySCC_PM25.rds")
barplot(tapply(data$Emissions,data$year,sum),xlab="year",ylab="emissions")
getwd
getwd()
setwd("~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1")
getwd()
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot1.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot1.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot1.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot1.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot2.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot2.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot2.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot3.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot3.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/Desktop/JohnsHopkinsDataScience/datasciencecoursera/ExData_Plotting1/plot4.R')
